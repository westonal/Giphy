apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId 'io.github.westonal.alansgiphysearch'
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName '1.0'
        buildConfigField 'String', 'GIPHY_API_URL', '"https://api.giphy.com/v1/gifs/"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'GIPHY_API_KEY', '"' + loadToken('giphy.release.api.token') + '"'
        }
        debug {
            buildConfigField 'String', 'GIPHY_API_KEY', '"' + loadToken('giphy.debug.api.token') + '"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':giphyapi')

    implementation 'com.google.dagger:dagger:2.21'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'android.arch.navigation:navigation-fragment:1.0.0-beta01'
    implementation 'android.arch.navigation:navigation-ui:1.0.0-beta01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0'
    implementation 'android.arch.lifecycle:extensions:2.0.0'

    // For snack bar
    implementation 'com.google.android.material:material:1.0.0'

    // Paging
    implementation 'androidx.paging:paging-common:2.1.0'
    implementation 'androidx.paging:paging-runtime:2.1.0'

    implementation 'com.github.bumptech.glide:glide:4.8.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    testImplementation 'junit:junit:4.12'
}

def loadToken(name) {
    Properties properties = new Properties()
    def propertiesFile = project.rootProject.file("local.properties")
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newDataInputStream())
    }
    def property = properties.getProperty(name)
    if (property == null) {
        println "Warning! Property: $name Was not found in local.properties"
    }
    property
}
